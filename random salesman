var current = [];
var base = [];
var best = [];
var prev = [];
var maximum = 1;
function setup() {
	createCanvas(windowWidth,windowHeight);
	background(0);
	for(var i = 0; i < 15; i++) {
		base.push([round(random(width)),round(random(height))]);
	}
	best = base.slice(0);
	current = base.slice(0);
	for(var i = 1; i <= base.length; i++) {
		maximum *= i;
	}
	console.log('Maximum: ' + maximum);
}

function draw() {
	background(0);
	show();
	if(prev.length < maximum) {
	  for(var i = 0; i < 1000; i++) {
	  	mutate(current);
	  	check();
	  }
	}
}

function mutate(list) {
	var var1 = floor(random(list.length));
	var var2 = floor(random(list.length));
	var x = list[var1];
	var y = list[var2];
	list[var1] = y;
	list[var2] = x;
	if (prev.contains(current)) {
		var var1 = floor(random(list.length));
		var var2 = floor(random(list.length));
		var x = list[var1];
		var y = list[var2];
		list[var1] = y;
		list[var2] = x;
	} else {
		prev.push(current.slice(0));
	}
}

function show() {
	stroke(55);
	strokeWeight(2);
	for(var i = 0; i < current.length-1; i++) {
		line(current[i][0],current[i][1],current[i+1][0],current[i+1][1]);
	}
	stroke(255);
	strokeWeight(1);
	for(var i = 0; i < best.length-1; i++) {
		line(best[i][0],best[i][1],best[i+1][0],best[i+1][1]);
	}
}

function calcLength(list) {
	var len = 0;
	for(var i = 0; i < list.length-1; i++) {
		len += dist(list[i][0],list[i][1],list[i+1][0],list[i+1][1]);
	}
	return len;
}

function check() {
	if(calcLength(current) < calcLength(best)) {
    best = current.slice(0);
    console.log(calcLength(best));
	}
}

Array.prototype.contains = function(obj) {
    var i = this.length;
    while (i--) {
        if (this[i] === obj) {
            return true;
        }
    }
    return false;
}
